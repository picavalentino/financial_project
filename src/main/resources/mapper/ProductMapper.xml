<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.financial_project.mapper.ProductMapper">
    <resultMap id="ProductResultMap" type="com.team.financial_project.dto.ProductDTO">
        <!-- ProductDTO 기본 필드 -->
        <id property="prodSn" column="prod_sn" />
        <result property="prodNm" column="prod_nm" />
        <result property="prodInstlAmtMin" column="prod_instl_amt_min" />
        <result property="prodInstlAmtMax" column="prod_instl_amt_max" />
        <result property="prodCreateAt" column="prod_create_at" />
        <result property="prodUpdateAt" column="prod_update_at" />
        <result property="userId" column="user_id" />
        <result property="prodCd" column="prod_cd" />
        <result property="prodTyCd" column="prodTyCd" />
        <result property="prodSbstgTyCd" column="prodSbstgTyCd" />
        <result property="prodPayTyCd" column="prodPayTyCd" />
        <result property="prodAirMin" column="prod_air_min" />
        <result property="prodAirMax" column="prod_air_max" />
        <result property="prodAirBgnYmd" column="prod_air_bgn_ymd" />
        <result property="prodAirEndYmd" column="prod_air_end_ymd" />
        <result property="prodIntTaxTyCd" column="prodIntTaxTyCd" />
        <result property="prodCurrStcd" column="prodCurrStcd" />
        <result property="prodNtslBgnYmd" column="prod_ntsl_bgn_ymd" />
        <result property="prodNtslEndYmd" column="prod_ntsl_end_ymd" />

        <!-- prodHist 리스트 매핑 -->
        <collection property="histList" ofType="com.team.financial_project.dto.ProdHistDTO">
            <id property="histId" column="hist_id" />
            <result property="userId" column="user_id" />
            <result property="prodSn" column="prod_sn" />
            <result property="prodAirMin" column="hist_prod_air_min" />
            <result property="prodAirMax" column="hist_prod_air_max" />
            <result property="prodAirBgnYmd" column="hist_prod_air_bgn_ymd" />
            <result property="prodAirEndYmd" column="hist_prod_air_end_ymd" />
            <result property="histCreateAt" column="hist_create_at" />
            <result property="histCurrStcd" column="hist_curr_stcd" />
        </collection>
    </resultMap>

    <select id="findAll" resultType="com.team.financial_project.dto.ProductDTO">
        SELECT
        p.prod_sn,
        p.prod_nm,
        p.prod_instl_amt_min,
        p.prod_instl_amt_max,
        p.prod_create_at,
        p.prod_update_at,
        p.user_id,
        p.prod_cd,
        c1.code_nm AS prodTyCd,
        c2.code_nm AS prodSbstgTyCd,
        c3.code_nm AS prodPayTyCd,
        c4.code_nm AS prodIntTaxTyCd,
        p.prod_air_min,
        p.prod_air_max,
        p.prod_air_bgn_ymd,
        p.prod_air_end_ymd,
        p.prod_curr_stcd,
        p.prod_ntsl_bgn_ymd,
        p.prod_ntsl_end_ymd
        FROM tb_product p
        LEFT JOIN tb_code c1 ON c1.code_cl = p.prod_ty_cd_code_cl AND c1.code_no = p.prod_ty_cd
        LEFT JOIN tb_code c2 ON c2.code_cl = p.prod_sbstg_ty_cd_code_cl AND c2.code_no = p.prod_sbstg_ty_cd
        LEFT JOIN tb_code c3 ON c3.code_cl = p.prod_pay_ty_cd_code_cl AND c3.code_no = p.prod_pay_ty_cd
        LEFT JOIN tb_code c4 ON c4.code_cl = p.prod_int_tax_ty_cd_code_cl AND c4.code_no = p.prod_int_tax_ty_cd
        ORDER BY p.prod_create_at DESC;
    </select>

    <select id="findById" parameterType="Long" resultMap="ProductResultMap">
        SELECT
        p.prod_sn,
        p.prod_nm,
        p.prod_instl_amt_min,
        p.prod_instl_amt_max,
        p.prod_create_at,
        p.prod_update_at,
        p.user_id,
        p.prod_cd,
        c1.code_nm AS prodTyCd,
        c2.code_nm AS prodSbstgTyCd,
        c3.code_nm AS prodPayTyCd,
        c4.code_nm AS prodIntTaxTyCd,
        p.prod_air_min,
        p.prod_air_max,
        p.prod_air_bgn_ymd,
        p.prod_air_end_ymd,
        c5.code_nm AS prodCurrStcd,
        p.prod_ntsl_bgn_ymd,
        p.prod_ntsl_end_ymd,
        h.hist_id,
        h.user_id,
        h.prod_sn,
        h.hist_prod_air_min,
        h.hist_prod_air_max,
        h.hist_prod_air_bgn_ymd,
        h.hist_prod_air_end_ymd,
        h.hist_create_at,
        h.hist_curr_stcd
        FROM tb_product p
        LEFT JOIN tb_code c1 ON c1.code_cl = p.prod_ty_cd_code_cl AND c1.code_no = p.prod_ty_cd
        LEFT JOIN tb_code c2 ON c2.code_cl = p.prod_sbstg_ty_cd_code_cl AND c2.code_no = p.prod_sbstg_ty_cd
        LEFT JOIN tb_code c3 ON c3.code_cl = p.prod_pay_ty_cd_code_cl AND c3.code_no = p.prod_pay_ty_cd
        LEFT JOIN tb_code c4 ON c4.code_cl = p.prod_int_tax_ty_cd_code_cl AND c4.code_no = p.prod_int_tax_ty_cd
        LEFT JOIN tb_code c5 ON c5.code_cl = p.prod_curr_stcd_code_cl AND c5.code_no = p.prod_curr_stcd
        LEFT JOIN tb_prod_hist h ON h.prod_sn = p.prod_sn
        WHERE p.prod_sn = #{prodSn}
    </select>

    <select id="searchProducts" parameterType="map" resultType="com.team.financial_project.dto.ProductDTO">
        SELECT *
        FROM tb_product
        WHERE 1=1
        <if test="prodTyCd != null and prodTyCd != ''">
            AND prod_ty_cd = #{prodTyCd}
        </if>
        <if test="prodCurrStcd != null and prodCurrStcd != ''">
            AND prod_curr_stcd = #{prodCurrStcd}
        </if>
        <if test="prodPayTyCd != null and prodPayTyCd != ''">
            AND prod_pay_ty_cd = #{prodPayTyCd}
        </if>
        <if test="prodNm != null and prodNm != ''">
            AND prod_nm LIKE CONCAT('%', #{prodNm}, '%')
        </if>
    </select>


    <insert id="insertProduct" parameterType="com.team.financial_project.dto.ProductDTO">
        INSERT INTO tb_product (
        prod_nm,             -- 상품명
        prod_instl_amt_min,  -- 최소 가입금액
        prod_instl_amt_max,  -- 최대 가입금액
        prod_create_at,      -- 생성일
        user_id,             -- 담당자 ID
        prod_cd,             -- 상품 코드
        prod_ty_cd,          -- 상품 유형 코드
        prod_sbstg_ty_cd,    -- 가입 대상 코드
        prod_pay_ty_cd,      -- 납입 주기 코드
        prod_air_min,        -- 최소 적용이율
        prod_air_max,        -- 최대 적용이율
        prod_air_bgn_ymd,    -- 적용 시작일
        prod_air_end_ymd,    -- 적용 종료일
        prod_int_tax_ty_cd,  -- 이자 과세 구분 코드
        prod_curr_stcd,      -- 현재 상태 코드
        prod_ntsl_bgn_ymd,   -- 판매 시작일
        prod_ntsl_end_ymd    -- 판매 종료일
        )
        VALUES (
        #{prodNm},
        #{prodInstlAmtMin},
        #{prodInstlAmtMax},
        NOW(),              -- 생성일 현재 시각
        #{userId},
        #{prodCd},
        #{prodTyCd},
        #{prodSbstgTyCd},
        #{prodPayTyCd},
        #{prodAirMin},
        #{prodAirMax},
        #{prodAirBgnYmd},
        #{prodAirEndYmd},
        #{prodIntTaxTyCd},
        #{prodCurrStcd},
        #{prodNtslBgnYmd},
        #{prodNtslEndYmd}
        )
    </insert>

    <select id="findCdSizeByName" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM tb_product
        WHERE prod_cd LIKE CONCAT(#{keyword}, '%')
    </select>

    <update id="updateProduct" parameterType="com.team.financial_project.dto.ProductDTO">
        <!-- 기존 데이터를 tb_prod_hist 테이블에 추가 -->
        INSERT INTO tb_prod_hist (
        hist_id,
        prod_sn,
        hist_prod_air_min,
        hist_prod_air_max,
        hist_prod_air_bgn_ymd,
        hist_prod_air_end_ymd,
        hist_create_at
        )
        SELECT
        nextval('tb_prod_hist_hist_id_seq'),
        prod_sn,
        prod_air_min,
        prod_air_max,
        prod_air_bgn_ymd,
        prod_air_end_ymd,
        now()
        FROM tb_product
        WHERE prod_sn = #{prodSn};

        <!-- tb_product 테이블에 데이터 업데이트 -->
        UPDATE tb_product
        SET
        prod_air_min = CASE WHEN #{prodAirMin,jdbcType=NUMERIC} IS NOT NULL THEN CAST(#{prodAirMin,jdbcType=NUMERIC} AS NUMERIC(5, 2)) ELSE prod_air_min END,
        prod_air_max = CASE WHEN #{prodAirMax,jdbcType=NUMERIC} IS NOT NULL THEN CAST(#{prodAirMax,jdbcType=NUMERIC} AS NUMERIC(5, 2)) ELSE prod_air_max END,
        prod_air_bgn_ymd = CASE WHEN #{prodAirBgnYmd,jdbcType=VARCHAR} IS NOT NULL THEN #{prodAirBgnYmd,jdbcType=VARCHAR} ELSE prod_air_bgn_ymd END,
        prod_air_end_ymd = CASE WHEN #{prodAirEndYmd,jdbcType=VARCHAR} IS NOT NULL THEN #{prodAirEndYmd,jdbcType=VARCHAR} ELSE prod_air_end_ymd END,
        prod_ntsl_bgn_ymd = CASE WHEN #{prodNtslBgnYmd,jdbcType=VARCHAR} IS NOT NULL THEN #{prodNtslBgnYmd,jdbcType=VARCHAR} ELSE prod_ntsl_bgn_ymd END,
        prod_ntsl_end_ymd = CASE WHEN #{prodNtslEndYmd,jdbcType=VARCHAR} IS NOT NULL THEN #{prodNtslEndYmd,jdbcType=VARCHAR} ELSE prod_ntsl_end_ymd END,
        prod_update_at = now()
        WHERE prod_sn = #{prodSn};
    </update>


    <update id="deleteProduct" parameterType="java.math.BigDecimal">
        UPDATE tb_product
        SET prod_curr_stcd = 2,
            prod_ntsl_end_ymd = CURRENT_DATE, -- 오늘 날짜를 yyyy-MM-dd 형식으로 설정
            prod_update_at = now() -- 현재 시각으로 업데이트
        WHERE prod_sn = #{prodSn}
    </update>

</mapper>