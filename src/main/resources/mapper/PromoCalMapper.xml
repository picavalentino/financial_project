<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.financial_project.promotion.mapper.PromoCalMapper">
    <select id="findDsTyCd" parameterType="Long" resultType="String">
        SELECT
        dsgn_ds_ty_cd
        FROM
        tb_custprod_dsgn
        WHERE
        dsgn_sn = #{dsTyCd}
    </select>

    <select id="getAcmlProductList" resultType="com.team.financial_project.promotion.dto.ProductInfoDto">
        SELECT
        p.PROD_SN as prodSn,                        -- 상품설계번호
        p.PROD_DS_TY_CD as prodDsTyCd,              -- 설계유형코드
        p.PROD_CD as prodCd,                        -- 상품코드
        p.PROD_NM as prodNm,                        -- 상품명
        sbstgCode.CODE_NM as prodSbstgTy,           -- 가입대상
        payTyCode.CODE_NM as prodPayTy,             -- 납입주기
        p.PROD_PAY_TY_CD as prodPayTyCd,            -- 납입주기코드
        p.PROD_AIR_MIN as prodAirMin,               -- 최소적용금리
        p.PROD_AIR_MAX as prodAirMax,               -- 최대적용금리
        p.PROD_INT_TAX_TY_CD as prodIntTaxTyCd,     -- 이자과세코드
        intTaxCode.CODE_NM as prodIntTaxTy,         -- 이자과세명
        intTaxCode.CODE_TAX_RATE as prodIntTaxRate  -- 이자과세율
        FROM TB_PRODUCT p
        -- 가입대상 유형 코드 조회를 위한 조인
        LEFT JOIN TB_CODE sbstgCode
        ON sbstgCode.CODE_CL = p.PROD_SBSTG_TY_CD_CODE_CL
        AND sbstgCode.CODE_NO = p.PROD_SBSTG_TY_CD
        -- 납입주기 코드 조회를 위한 조인
        LEFT JOIN TB_CODE payTyCode
        ON payTyCode.CODE_CL = p.PROD_PAY_TY_CD_CODE_CL
        AND payTyCode.CODE_NO = p.PROD_PAY_TY_CD
        -- 이자과세 유형 코드 조회를 위한 조인
        LEFT JOIN TB_CODE intTaxCode
        ON intTaxCode.CODE_CL = p.PROD_INT_TAX_TY_CD_CODE_CL
        AND intTaxCode.CODE_NO = p.PROD_INT_TAX_TY_CD
        WHERE
        -- 목돈적금 상품만 조회
        p.prod_ty_cd IN (
        SELECT
        code_no
        FROM
        tb_code
        WHERE
        prod_nm LIKE '%목돈%')
        <if test="prodCd != null and prodCd != ''">
            AND p.PROD_CD LIKE '%' || #{prodCd} || '%'
        </if>
        <if test="prodNm != null and prodNm != ''">
            AND p.PROD_NM LIKE '%' || #{prodNm} || '%'
        </if>
        ORDER BY p.PROD_CD ASC
    </select>

    <select id="getDpstProductList" resultType="com.team.financial_project.promotion.dto.ProductInfoDto">
        SELECT
        p.PROD_SN as prodSn,                        -- 상품설계번호
        p.PROD_DS_TY_CD as prodDsTyCd,              -- 설계유형코드
        p.PROD_CD as prodCd,                        -- 상품코드
        p.PROD_NM as prodNm,                        -- 상품명
        sbstgCode.CODE_NM as prodSbstgTy,           -- 가입대상
        payTyCode.CODE_NM as prodPayTy,             -- 납입주기
        p.PROD_PAY_TY_CD as prodPayTyCd,            -- 납입주기코드
        p.PROD_AIR_MIN as prodAirMin,               -- 최소적용금리
        p.PROD_AIR_MAX as prodAirMax,               -- 최대적용금리
        p.PROD_INT_TAX_TY_CD as prodIntTaxTyCd,     -- 이자과세코드
        intTaxCode.CODE_NM as prodIntTaxTy,         -- 이자과세명
        intTaxCode.CODE_TAX_RATE as prodIntTaxRate  -- 이자과세율
        FROM TB_PRODUCT p
        -- 가입대상 유형 코드 조회를 위한 조인
        LEFT JOIN TB_CODE sbstgCode
        ON sbstgCode.CODE_CL = p.PROD_SBSTG_TY_CD_CODE_CL
        AND sbstgCode.CODE_NO = p.PROD_SBSTG_TY_CD
        -- 납입주기 코드 조회를 위한 조인
        LEFT JOIN TB_CODE payTyCode
        ON payTyCode.CODE_CL = p.PROD_PAY_TY_CD_CODE_CL
        AND payTyCode.CODE_NO = p.PROD_PAY_TY_CD
        -- 이자과세 유형 코드 조회를 위한 조인
        LEFT JOIN TB_CODE intTaxCode
        ON intTaxCode.CODE_CL = p.PROD_INT_TAX_TY_CD_CODE_CL
        AND intTaxCode.CODE_NO = p.PROD_INT_TAX_TY_CD
        WHERE
        -- 예금 상품만 조회
        p.PROD_TY_CD = '2'
        <if test="prodCd != null and prodCd != ''">
            AND p.PROD_CD LIKE '%' || #{prodCd} || '%'
        </if>
        <if test="prodNm != null and prodNm != ''">
            AND p.PROD_NM LIKE '%' || #{prodNm} || '%'
        </if>
        ORDER BY p.PROD_CD ASC
    </select>

    <select id="getLoanProductList" resultType="com.team.financial_project.promotion.dto.ProductInfoDto">
        SELECT
        p.PROD_SN as prodSn,                        -- 상품설계번호
        p.PROD_DS_TY_CD as prodDsTyCd,              -- 설계유형코드
        p.PROD_CD as prodCd,                        -- 상품코드
        p.PROD_NM as prodNm,                        -- 상품명
        sbstgCode.CODE_NM as prodSbstgTy,           -- 가입대상
        payTyCode.CODE_NM as prodPayTy,             -- 납입주기
        p.PROD_PAY_TY_CD as prodPayTyCd,            -- 납입주기코드
        p.PROD_AIR_MIN as prodAirMin,               -- 최소적용금리
        p.PROD_AIR_MAX as prodAirMax,               -- 최대적용금리
        p.PROD_INT_TAX_TY_CD as prodIntTaxTyCd,     -- 이자과세코드
        intTaxCode.CODE_NM as prodIntTaxTy,         -- 이자과세명
        intTaxCode.CODE_TAX_RATE as prodIntTaxRate  -- 이자과세율
        FROM TB_PRODUCT p
        -- 가입대상 유형 코드 조회를 위한 조인
        LEFT JOIN TB_CODE sbstgCode
        ON sbstgCode.CODE_CL = p.PROD_SBSTG_TY_CD_CODE_CL
        AND sbstgCode.CODE_NO = p.PROD_SBSTG_TY_CD
        -- 납입주기 코드 조회를 위한 조인
        LEFT JOIN TB_CODE payTyCode
        ON payTyCode.CODE_CL = p.PROD_PAY_TY_CD_CODE_CL
        AND payTyCode.CODE_NO = p.PROD_PAY_TY_CD
        -- 이자과세 유형 코드 조회를 위한 조인
        LEFT JOIN TB_CODE intTaxCode
        ON intTaxCode.CODE_CL = p.PROD_INT_TAX_TY_CD_CODE_CL
        AND intTaxCode.CODE_NO = p.PROD_INT_TAX_TY_CD
        WHERE
        --  대출 상품만 조회
        p.PROD_TY_CD = '3'
        <if test="prodCd != null and prodCd != ''">
            AND p.PROD_CD LIKE '%' || #{prodCd} || '%'
        </if>
        <if test="prodNm != null and prodNm != ''">
            AND p.PROD_NM LIKE '%' || #{prodNm} || '%'
        </if>
        ORDER BY p.PROD_CD ASC
    </select>

    <insert id="insertCustprodDsgn" useGeneratedKeys="true" keyProperty="dsgnSn">
        INSERT INTO TB_CUSTPROD_DSGN (
        PROD_SN, CUST_ID, USER_ID, DSGN_CREATE_AT, DSGN_UPDATE_AT,
        DSGN_DS_TY_CD, DSGN_PRG_STCD
        ) VALUES (
        #{prodSn}, #{custId}, #{userId}, #{dsgnCreateAt}, #{dsgnUpdateAt},
        #{prodDsTyCd}, #{dsgnPrgStcd}
        )
    </insert>

    <insert id="insertProdDsgnacml">
        INSERT INTO TB_PROD_DSGN_ACML (
        DSGN_SN, ACML_PAY_TY_CD, ACML_GOAL_AMT,
        ACML_GOAL_PRD, ACML_STRT_DT, ACML_MTR_DT, ACML_APLY_RATE,
        ACML_INT_TAX_TY_CD, ACML_CIRCLE_AMT, ACML_TOT_DPST_AMT, ACML_TOT_DPST_INT,
        ACML_INT_TAX_AMT, ACML_ATX_RCVE_AMT
        ) VALUES (
        #{dsgnSn}, #{prodPayTyCd}, #{savgCircleAmt},
        #{savgGoalPrd}, #{savgStrtDt}, #{savgMtrDt}, #{savgAplyRate},
        #{savgIntTaxTyCd}, #{savgCircleAmt}, #{savgTotDpstAmt}, #{savgTotDpstInt},
        #{savgIntTaxAmt}, #{savgAtxRcveAmt}
        )
    </insert>

    <insert id="insertDpstCustprodDsgn" useGeneratedKeys="true" keyProperty="dsgnSn">
        INSERT INTO TB_CUSTPROD_DSGN (
        PROD_SN, CUST_ID, USER_ID, DSGN_CREATE_AT, DSGN_UPDATE_AT,
        DSGN_DS_TY_CD, DSGN_PRG_STCD
        ) VALUES (
        #{prodSn}, #{custId}, #{userId}, #{dsgnCreateAt}, #{dsgnUpdateAt},
        #{prodDsTyCd}, #{dsgnPrgStcd}
        )
    </insert>
    <insert id="insertProdDsgnDpst">
        INSERT INTO TB_PROD_DSGN_DPST (
        DSGN_SN, DPST_PAY_TY_CD, DPST_AMT,
        DPST_PRD, DPST_STRT_DT, DPST_MTR_DT, DPST_APLY_RATE,
        DPST_INT_TAX_TY_CD, DPST_TOT_AMT, DPST_TOT_INT,
        DPST_INT_TAX_AMT, DPST_ATX_RCVE_AMT
        ) VALUES (
        #{dsgnSn}, #{prodPayTyCd}, #{savgCircleAmt},
        #{savgGoalPrd}, #{savgStrtDt}, #{savgMtrDt}, #{savgAplyRate},
        #{savgIntTaxTyCd}, #{savgTotDpstAmt}, #{savgTotDpstInt},
        #{savgIntTaxAmt}, #{savgAtxRcveAmt}
        )
    </insert>

    <insert id="insertLoanCustprodDsgn" useGeneratedKeys="true" keyProperty="dsgnSn">
        INSERT INTO TB_CUSTPROD_DSGN (
        PROD_SN, CUST_ID, USER_ID, DSGN_CREATE_AT, DSGN_UPDATE_AT,
        DSGN_DS_TY_CD, DSGN_PRG_STCD
        ) VALUES (
        #{prodSn}, #{custId}, #{userId}, #{dsgnCreateAt}, #{dsgnUpdateAt},
        #{prodDsTyCd}, #{dsgnPrgStcd}
        )
    </insert>
    <insert id="insertProdDsgnLoan">
        INSERT INTO TB_PROD_DSGN_LOAN (
        DSGN_SN, LOAN_RPTY_CD, LOAN_AMT,
        LOAN_REPY_PRD, LOAN_STRT_DT, LOAN_MTR_DT, LOAN_RATE,
        LOAN_TOT_INT_AMT, LOAN_TOT_PAY_AMT
        ) VALUES (
        #{dsgnSn}, #{repaymentMethodCode}, #{savgCircleAmt},
        #{savgGoalPrd}, #{savgStrtDt}, #{savgMtrDt}, #{savgAplyRate},
        #{savgTotDpstInt}, #{savgAtxRcveAmt}
        )
    </insert>

    <update id="updateCustprodDsgn">
        UPDATE TB_CUSTPROD_DSGN
        SET
        PROD_SN = #{prodSn},
        DSGN_UPDATE_AT = #{dsgnUpdateAt},
        DSGN_DS_TY_CD = #{prodDsTyCd},
        DSGN_PRG_STCD = #{dsgnPrgStcd}
        WHERE
        DSGN_SN = #{dsgnSno} <!-- 기존 데이터를 식별하는 조건 -->
    </update>
    <update id="updateProdDsgnAcml">
        UPDATE TB_PROD_DSGN_ACML
        SET
        ACML_PAY_TY_CD = #{prodPayTyCd},
        ACML_GOAL_AMT = #{savgCircleAmt},
        ACML_GOAL_PRD = #{savgGoalPrd},
        ACML_STRT_DT = #{savgStrtDt},
        ACML_MTR_DT = #{savgMtrDt},
        ACML_APLY_RATE = #{savgAplyRate},
        ACML_INT_TAX_TY_CD = #{savgIntTaxTyCd},
        ACML_CIRCLE_AMT = #{savgCircleAmt},
        ACML_TOT_DPST_AMT = #{savgTotDpstAmt},
        ACML_TOT_DPST_INT = #{savgTotDpstInt},
        ACML_INT_TAX_AMT = #{savgIntTaxAmt},
        ACML_ATX_RCVE_AMT = #{savgAtxRcveAmt}
        WHERE
        DSGN_SN = #{dsgnSno} <!-- 기존 데이터를 식별하는 조건 -->
    </update>

    <update id="updateDpstCustprodDsgn">
        UPDATE TB_CUSTPROD_DSGN
        SET
        PROD_SN = #{prodSn},
        DSGN_UPDATE_AT = #{dsgnUpdateAt},
        DSGN_DS_TY_CD = #{prodDsTyCd},
        DSGN_PRG_STCD = #{dsgnPrgStcd}
        WHERE
        DSGN_SN = #{dsgnSno} <!-- 기존 데이터를 식별하는 조건 -->
    </update>
    <update id="updateProdDsgnDpst">
        UPDATE TB_PROD_DSGN_DPST
        SET
        DPST_PAY_TY_CD = #{prodPayTyCd},
        DPST_AMT = #{savgCircleAmt},
        DPST_PRD = #{savgGoalPrd},
        DPST_STRT_DT = #{savgStrtDt},
        DPST_MTR_DT = #{savgMtrDt},
        DPST_APLY_RATE = #{savgAplyRate},
        DPST_INT_TAX_TY_CD = #{savgIntTaxTyCd},
        DPST_TOT_AMT = #{savgTotDpstAmt},
        DPST_TOT_INT = #{savgTotDpstInt},
        DPST_INT_TAX_AMT = #{savgIntTaxAmt},
        DPST_ATX_RCVE_AMT = #{savgAtxRcveAmt}
        WHERE
        DSGN_SN = #{dsgnSno} <!-- 기존 데이터를 식별하는 조건 -->
    </update>

    <update id="updateSavgCustprodDsgn">
        UPDATE TB_CUSTPROD_DSGN
        SET
        PROD_SN = #{prodSn},
        DSGN_UPDATE_AT = #{dsgnUpdateAt},
        DSGN_DS_TY_CD = #{prodDsTyCd},
        DSGN_PRG_STCD = #{dsgnPrgStcd}
        WHERE
        DSGN_SN = #{dsgnSno} <!-- 기존 데이터를 식별하는 조건 -->
    </update>
    <update id="updateProdDsgnSavg">
        UPDATE TB_PROD_DSGN_SAVG
        SET
        SAVG_PAY_TY_CD = #{prodPayTyCd},
        SAVG_GOAL_AMT = #{savgCircleAmt},
        SAVG_GOAL_PRD = #{savgGoalPrd},
        SAVG_STRT_DT = #{savgStrtDt},
        SAVG_MTR_DT = #{savgMtrDt},
        SAVG_APLY_RATE = #{savgAplyRate},
        SAVG_INT_TAX_TY_CD = #{savgIntTaxTyCd},
        SAVG_CIRCLE_AMT = #{savgCircleAmt},
        SAVG_TOT_DPST_AMT = #{savgTotDpstAmt},
        SAVG_TOT_DPST_INT = #{savgTotDpstInt},
        SAVG_INT_TAX_AMT = #{savgIntTaxAmt},
        SAVG_ATX_RCVE_AMT = #{savgAtxRcveAmt}
        WHERE
        DSGN_SN = #{dsgnSno} <!-- 기존 데이터를 식별하는 조건 -->
    </update>

    <update id="updateLoanCustprodDsgn">
        UPDATE TB_CUSTPROD_DSGN
        SET
        PROD_SN = #{prodSn},
        DSGN_UPDATE_AT = #{dsgnUpdateAt},
        DSGN_DS_TY_CD = #{prodDsTyCd},
        DSGN_PRG_STCD = #{dsgnPrgStcd}
        WHERE
        DSGN_SN = #{dsgnSn}
    </update>
    <update id="updateProdDsgnLoan">
        UPDATE TB_PROD_DSGN_LOAN
        SET
        LOAN_RPTY_CD = #{repaymentMethodCode},
        LOAN_AMT = #{savgCircleAmt},
        LOAN_REPY_PRD = #{savgGoalPrd},
        LOAN_STRT_DT = #{savgStrtDt},
        LOAN_MTR_DT = #{savgMtrDt},
        LOAN_RATE = #{savgAplyRate},
        LOAN_TOT_INT_AMT = #{savgTotDpstInt},
        LOAN_TOT_PAY_AMT = #{savgAtxRcveAmt}
        WHERE
        DSGN_SN = #{dsgnSn}
    </update>

    <select id="findSavgDetails" parameterType="long" resultType="com.team.financial_project.promotion.dto.DsgnDetailDto">
        WITH dsgn_data AS (
        SELECT
        dsgn_create_at, dsgn_update_at, cust_id, user_id, prod_sn, dsgn_ds_ty_cd
        FROM tb_custprod_dsgn
        WHERE dsgn_sn = #{dsgnSn}
        ),
        cust_data AS (
        SELECT
        cust_nm, cust_rrn, cust_email, cust_telno, cust_addr, cust_create_at
        FROM tb_customer
        WHERE cust_id = (SELECT cust_id FROM dsgn_data)
        ),
        code_data AS (
        SELECT
        code_nm
        FROM tb_code
        WHERE code_no = (SELECT cust_occp_ty_cd FROM tb_customer WHERE cust_id = (SELECT cust_id FROM dsgn_data))
        AND code_cl = (SELECT cust_occp_ty_cd_code_cl FROM tb_customer WHERE cust_id = (SELECT cust_id FROM dsgn_data))
        ),
        user_data AS (
        SELECT
        user_name
        FROM tb_user
        WHERE user_id = (SELECT user_id FROM dsgn_data)
        ),
        prod_data AS (
        SELECT
        prod_cd, prod_nm
        FROM tb_product
        WHERE prod_sn = (SELECT prod_sn FROM dsgn_data)
        ),
        savg_data AS (
        SELECT
        savg_strt_dt, savg_mtr_dt, savg_goal_amt, savg_goal_prd, savg_aply_rate, savg_int_tax_ty_cd, savg_pay_ty_cd
        FROM tb_prod_dsgn_savg
        WHERE dsgn_sn = #{dsgnSn}
        ),
        tax_code_data AS (
        SELECT
        code_tax_rate
        FROM tb_code
        WHERE
        code_no = (SELECT savg_int_tax_ty_cd FROM tb_prod_dsgn_savg WHERE dsgn_sn = #{dsgnSn})
        AND code_cl = (SELECT savg_int_tax_ty_cd_code_cl FROM tb_prod_dsgn_savg WHERE dsgn_sn = #{dsgnSn})
        ),
        pay_term_data AS (
        SELECT
        code_nm
        FROM tb_code
        WHERE code_no = (SELECT savg_pay_ty_cd FROM tb_prod_dsgn_savg WHERE dsgn_sn = #{dsgnSn})
        AND code_cl = (SELECT savg_pay_ty_cd_code_cl FROM tb_prod_dsgn_savg WHERE dsgn_sn = #{dsgnSn})
        )
        SELECT
        CASE
        WHEN dsgn_data.dsgn_update_at IS NOT NULL THEN dsgn_data.dsgn_update_at
            ELSE dsgn_data.dsgn_create_at
        END AS effectiveDsgnDate,
        dsgn_data.dsgn_ds_ty_cd AS dsgnDsTyCd,
        dsgn_data.prod_sn AS prodSn,
        prod_data.prod_cd AS prodCd,
        prod_data.prod_nm AS prodNm,
        cust_data.cust_nm AS custNm,
        cust_data.cust_rrn AS custRrn,
        cust_data.cust_email AS custEmail,
        cust_data.cust_telno AS custTelno,
        cust_data.cust_addr AS custAddr,
        cust_data.cust_create_at AS custCreateAt,
        code_data.code_nm AS codeNm,
        user_data.user_name AS userName,
        savg_data.savg_strt_dt AS savgStrtDt,
        savg_data.savg_mtr_dt AS savgMtrDt,
        savg_data.savg_goal_amt AS savgGoalAmt,
        savg_data.savg_goal_prd AS savgGoalPrd,
        savg_data.savg_aply_rate AS savgAplyRate,
        savg_data.savg_int_tax_ty_cd AS savgIntTaxTyCd,
        savg_data.savg_pay_ty_cd AS savgPayTyCd,
        tax_code_data.code_tax_rate AS savgTaxRate,
        pay_term_data.code_nm AS payTerm
        FROM dsgn_data
        LEFT JOIN cust_data ON 1=1
        LEFT JOIN code_data ON 1=1
        LEFT JOIN user_data ON 1=1
        LEFT JOIN prod_data ON 1=1
        LEFT JOIN savg_data ON dsgn_data.dsgn_ds_ty_cd = '1'
        LEFT JOIN tax_code_data ON dsgn_data.dsgn_ds_ty_cd = '1'
        LEFT JOIN pay_term_data ON dsgn_data.dsgn_ds_ty_cd = '1'
    </select>

    <select id="findAcmlDetails" parameterType="long" resultType="com.team.financial_project.promotion.dto.DsgnDetailDto">
        WITH dsgn_data AS (
        SELECT
        dsgn_create_at, dsgn_update_at, cust_id, user_id, prod_sn, dsgn_ds_ty_cd
        FROM tb_custprod_dsgn
        WHERE dsgn_sn = #{dsgnSn}
        ),
        cust_data AS (
        SELECT
        cust_nm, cust_rrn, cust_email, cust_telno, cust_addr, cust_create_at
        FROM tb_customer
        WHERE cust_id = (SELECT cust_id FROM dsgn_data)
        ),
        code_data AS (
        SELECT
        code_nm
        FROM tb_code
        WHERE code_no = (SELECT cust_occp_ty_cd FROM tb_customer WHERE cust_id = (SELECT cust_id FROM dsgn_data))
        AND code_cl = (SELECT cust_occp_ty_cd_code_cl FROM tb_customer WHERE cust_id = (SELECT cust_id FROM dsgn_data))
        ),
        user_data AS (
        SELECT
        user_name
        FROM tb_user
        WHERE user_id = (SELECT user_id FROM dsgn_data)
        ),
        prod_data AS (
        SELECT
        prod_cd, prod_nm
        FROM tb_product
        WHERE prod_sn = (SELECT prod_sn FROM dsgn_data)
        ),
        acml_data AS (
        SELECT
        acml_strt_dt, acml_mtr_dt, acml_goal_amt, acml_goal_prd, acml_aply_rate, acml_int_tax_ty_cd, acml_pay_ty_cd
        FROM tb_prod_dsgn_acml
        WHERE dsgn_sn = #{dsgnSn}
        ),
        tax_code_data AS (
        SELECT
        code_tax_rate
        FROM tb_code
        WHERE
        code_no = (SELECT acml_int_tax_ty_cd FROM tb_prod_dsgn_acml WHERE dsgn_sn = #{dsgnSn})
        AND code_cl = (SELECT acml_int_tax_ty_cd_code_cl FROM tb_prod_dsgn_acml WHERE dsgn_sn = #{dsgnSn})
        ),
        pay_term_data AS (
        SELECT
        code_nm
        FROM tb_code
        WHERE code_no = (SELECT acml_pay_ty_cd FROM tb_prod_dsgn_acml WHERE dsgn_sn = #{dsgnSn})
        AND code_cl = (SELECT acml_pay_ty_cd_code_cl FROM tb_prod_dsgn_acml WHERE dsgn_sn = #{dsgnSn})
        )
        SELECT
        CASE
        WHEN dsgn_data.dsgn_update_at IS NOT NULL THEN dsgn_data.dsgn_update_at
        ELSE dsgn_data.dsgn_create_at
        END AS effectiveDsgnDate,
        dsgn_data.dsgn_ds_ty_cd AS dsgnDsTyCd,
        dsgn_data.prod_sn AS prodSn,
        prod_data.prod_cd AS prodCd,
        prod_data.prod_nm AS prodNm,
        cust_data.cust_nm AS custNm,
        cust_data.cust_rrn AS custRrn,
        cust_data.cust_email AS custEmail,
        cust_data.cust_telno AS custTelno,
        cust_data.cust_addr AS custAddr,
        cust_data.cust_create_at AS custCreateAt,
        code_data.code_nm AS codeNm,
        user_data.user_name AS userName,
        acml_data.acml_strt_dt AS savgStrtDt,
        acml_data.acml_mtr_dt AS savgMtrDt,
        acml_data.acml_goal_amt AS savgGoalAmt,
        acml_data.acml_goal_prd AS savgGoalPrd,
        acml_data.acml_aply_rate AS savgAplyRate,
        acml_data.acml_int_tax_ty_cd AS savgIntTaxTyCd,
        acml_data.acml_pay_ty_cd AS savgPayTyCd,
        tax_code_data.code_tax_rate AS savgTaxRate,
        pay_term_data.code_nm AS payTerm
        FROM dsgn_data
        LEFT JOIN cust_data ON 1=1
        LEFT JOIN code_data ON 1=1
        LEFT JOIN user_data ON 1=1
        LEFT JOIN prod_data ON 1=1
        LEFT JOIN acml_data ON dsgn_data.dsgn_ds_ty_cd = '2'
        LEFT JOIN tax_code_data ON dsgn_data.dsgn_ds_ty_cd = '2'
        LEFT JOIN pay_term_data ON dsgn_data.dsgn_ds_ty_cd = '2'
    </select>

    <select id="findDpstDetails" parameterType="long" resultType="com.team.financial_project.promotion.dto.DsgnDetailDto">
        WITH dsgn_data AS (
        SELECT
        dsgn_create_at, dsgn_update_at, cust_id, user_id, prod_sn, dsgn_ds_ty_cd
        FROM tb_custprod_dsgn
        WHERE dsgn_sn = #{dsgnSn}
        ),
        cust_data AS (
        SELECT
        cust_nm, cust_rrn, cust_email, cust_telno, cust_addr, cust_create_at
        FROM tb_customer
        WHERE cust_id = (SELECT cust_id FROM dsgn_data)
        ),
        code_data AS (
        SELECT
        code_nm
        FROM tb_code
        WHERE code_no = (SELECT cust_occp_ty_cd FROM tb_customer WHERE cust_id = (SELECT cust_id FROM dsgn_data))
        AND code_cl = (SELECT cust_occp_ty_cd_code_cl FROM tb_customer WHERE cust_id = (SELECT cust_id FROM dsgn_data))
        ),
        user_data AS (
        SELECT
        user_name
        FROM tb_user
        WHERE user_id = (SELECT user_id FROM dsgn_data)
        ),
        prod_data AS (
        SELECT
        prod_cd, prod_nm
        FROM tb_product
        WHERE prod_sn = (SELECT prod_sn FROM dsgn_data)
        ),
        dpst_data AS (
        SELECT
        dpst_strt_dt, dpst_mtr_dt, dpst_amt, dpst_prd, dpst_aply_rate, dpst_int_tax_ty_cd, dpst_pay_ty_cd
        FROM tb_prod_dsgn_dpst
        WHERE dsgn_sn = #{dsgnSn}
        ),
        tax_code_data AS (
        SELECT
        code_tax_rate
        FROM tb_code
        WHERE
        code_no = (SELECT dpst_int_tax_ty_cd FROM tb_prod_dsgn_dpst WHERE dsgn_sn = #{dsgnSn})
        AND code_cl = (SELECT dpst_int_tax_ty_cd_code_cl FROM tb_prod_dsgn_dpst WHERE dsgn_sn = #{dsgnSn})
        ),
        pay_term_data AS (
        SELECT
        code_nm
        FROM tb_code
        WHERE code_no = (SELECT dpst_pay_ty_cd FROM tb_prod_dsgn_dpst WHERE dsgn_sn = #{dsgnSn})
        AND code_cl = (SELECT dpst_pay_ty_cd_code_cl FROM tb_prod_dsgn_dpst WHERE dsgn_sn = #{dsgnSn})
        )
        SELECT
        CASE
        WHEN dsgn_data.dsgn_update_at IS NOT NULL THEN dsgn_data.dsgn_update_at
        ELSE dsgn_data.dsgn_create_at
        END AS effectiveDsgnDate,
        dsgn_data.dsgn_ds_ty_cd AS dsgnDsTyCd,
        dsgn_data.prod_sn AS prodSn,
        prod_data.prod_cd AS prodCd,
        prod_data.prod_nm AS prodNm,
        cust_data.cust_nm AS custNm,
        cust_data.cust_rrn AS custRrn,
        cust_data.cust_email AS custEmail,
        cust_data.cust_telno AS custTelno,
        cust_data.cust_addr AS custAddr,
        cust_data.cust_create_at AS custCreateAt,
        code_data.code_nm AS codeNm,
        user_data.user_name AS userName,
        dpst_data.dpst_strt_dt AS savgStrtDt,
        dpst_data.dpst_mtr_dt AS savgMtrDt,
        dpst_data.dpst_amt AS savgGoalAmt,
        dpst_data.dpst_prd AS savgGoalPrd,
        dpst_data.dpst_aply_rate AS savgAplyRate,
        dpst_data.dpst_int_tax_ty_cd AS savgIntTaxTyCd,
        dpst_data.dpst_pay_ty_cd AS savgPayTyCd,
        tax_code_data.code_tax_rate AS savgTaxRate,
        pay_term_data.code_nm AS payTerm
        FROM dsgn_data
        LEFT JOIN cust_data ON 1=1
        LEFT JOIN code_data ON 1=1
        LEFT JOIN user_data ON 1=1
        LEFT JOIN prod_data ON 1=1
        LEFT JOIN dpst_data ON dsgn_data.dsgn_ds_ty_cd = '3'
        LEFT JOIN tax_code_data ON dsgn_data.dsgn_ds_ty_cd = '3'
        LEFT JOIN pay_term_data ON dsgn_data.dsgn_ds_ty_cd = '3'
    </select>

    <select id="findLoanDetails" parameterType="long" resultType="com.team.financial_project.promotion.dto.DsgnDetailDto">
        WITH dsgn_data AS (
        SELECT
        dsgn_create_at, dsgn_update_at, cust_id, user_id, prod_sn, dsgn_ds_ty_cd
        FROM tb_custprod_dsgn
        WHERE dsgn_sn = #{dsgnSn}
        ),
        cust_data AS (
        SELECT
        cust_nm, cust_rrn, cust_email, cust_telno, cust_addr, cust_create_at
        FROM tb_customer
        WHERE cust_id = (SELECT cust_id FROM dsgn_data)
        ),
        code_data AS (
        SELECT
        code_nm
        FROM tb_code
        WHERE code_no = (SELECT cust_occp_ty_cd FROM tb_customer WHERE cust_id = (SELECT cust_id FROM dsgn_data))
        AND code_cl = (SELECT cust_occp_ty_cd_code_cl FROM tb_customer WHERE cust_id = (SELECT cust_id FROM dsgn_data))
        ),
        user_data AS (
        SELECT
        user_name
        FROM tb_user
        WHERE user_id = (SELECT user_id FROM dsgn_data)
        ),
        prod_data AS (
        SELECT
        prod_cd, prod_nm
        FROM tb_product
        WHERE prod_sn = (SELECT prod_sn FROM dsgn_data)
        ),
        loan_data AS (
        SELECT
        loan_strt_dt, loan_mtr_dt, loan_amt, loan_repy_prd, loan_rate, loan_rpty_cd
        FROM tb_prod_dsgn_loan
        WHERE dsgn_sn = #{dsgnSn}
        ),
        repayment_data AS (
        SELECT
        code_nm
        FROM tb_code
        WHERE
        code_no = (SELECT loan_rpty_cd FROM tb_prod_dsgn_loan WHERE dsgn_sn = #{dsgnSn})
        AND code_cl = (SELECT loan_rpty_cd_code_cl FROM tb_prod_dsgn_loan WHERE dsgn_sn = #{dsgnSn})
        )
        SELECT
        CASE
        WHEN dsgn_data.dsgn_update_at IS NOT NULL THEN dsgn_data.dsgn_update_at
        ELSE dsgn_data.dsgn_create_at
        END AS effectiveDsgnDate,
        dsgn_data.dsgn_ds_ty_cd AS dsgnDsTyCd,
        dsgn_data.prod_sn AS prodSn,
        prod_data.prod_cd AS prodCd,
        prod_data.prod_nm AS prodNm,
        cust_data.cust_nm AS custNm,
        cust_data.cust_rrn AS custRrn,
        cust_data.cust_email AS custEmail,
        cust_data.cust_telno AS custTelno,
        cust_data.cust_addr AS custAddr,
        cust_data.cust_create_at AS custCreateAt,
        code_data.code_nm AS codeNm,
        user_data.user_name AS userName,
        loan_data.loan_strt_dt AS savgStrtDt,
        loan_data.loan_mtr_dt AS savgMtrDt,
        loan_data.loan_amt AS savgGoalAmt,
        loan_data.loan_repy_prd AS savgGoalPrd,
        loan_data.loan_rate AS savgAplyRate,
        loan_data.loan_rpty_cd AS savgPayTyCd,
        repayment_data.code_nm AS savgTaxRate
        FROM dsgn_data
        LEFT JOIN cust_data ON 1=1
        LEFT JOIN code_data ON 1=1
        LEFT JOIN user_data ON 1=1
        LEFT JOIN prod_data ON 1=1
        LEFT JOIN loan_data ON dsgn_data.dsgn_ds_ty_cd = '4'
        LEFT JOIN repayment_data ON dsgn_data.dsgn_ds_ty_cd = '4'
    </select>

</mapper>