name: Build and Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 실행
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Java 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # OpenJDK 배포판
          java-version: '17'       # Java 17 설치

      # 2. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 3. Gradle로 JAR 파일 빌드
      - name: Build JAR file
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      # 4. AWS CLI 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 5. JAR 파일을 S3에 업로드하고 Elastic Beanstalk에 배포
      - name: Deploy to Elastic Beanstalk
        run: |
          VERSION_LABEL="v-${{ github.run_id }}"

          # S3에 JAR 파일 업로드
          aws s3 cp build/libs/financial_project-0.0.1-SNAPSHOT.jar s3://elasticbeanstalk-ap-northeast-2-235494805011/deployments/financial_project-${VERSION_LABEL}.jar

          # Elastic Beanstalk 애플리케이션 버전 생성
          aws elasticbeanstalk create-application-version \
            --application-name "codechefproject" \
            --version-label "${VERSION_LABEL}" \
            --source-bundle S3Bucket="elasticbeanstalk-ap-northeast-2-235494805011",S3Key="deployments/financial_project-${VERSION_LABEL}.jar"

          # Elastic Beanstalk 환경 업데이트
          aws elasticbeanstalk update-environment \
            --environment-name "Codechefproject-env" \
            --version-label "${VERSION_LABEL}"
